{"ast":null,"code":"import { API } from '../config';\nexport const signUp = user => {\n  return fetch(`${API}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      \"Content-Type\": 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const signIn = user => {\n  return fetch(`${API}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      \"Content-Type\": 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const authenticate = (data, next) => {\n  if (typeof window !== 'undefined') {\n    localStorage.setItem('jwt', JSON.stringify(data));\n    next();\n  }\n};\nexport const signOut = next => {\n  if (typeof window !== 'undefined') {\n    localStorage.removeItem('jwt');\n    next();\n    return fetch(`${API}/signout`, {\n      method: 'GET'\n    }).then(response => console.log('signout', response)).catch(err => console.log(err));\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == 'undefined') {\n    return false;\n  }\n\n  if (localStorage.getItem('jwt')) {\n    return JSON.parse(localStorage.getItem('jwt'));\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["C:/mern-ecommerce/react-nodejs-ecommerce-app/ecommerce-frontend/src/auth/auth.js"],"names":["API","signUp","user","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","err","console","log","signIn","authenticate","data","next","window","localStorage","setItem","signOut","removeItem","isAuthenticated","getItem","parse"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,WAAlB;AAEA,OAAO,MAAOC,MAAM,GAAIC,IAAD,IAAS;AAE5B,SAAOC,KAAK,CAAE,GAAEH,GAAI,SAAR,EAAiB;AAEzBI,IAAAA,MAAM,EAAE,MAFiB;AAGzBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAHgB;AAOzBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAPmB,GAAjB,CAAL,CASJQ,IATI,CASCC,QAAQ,IAAG;AAAC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,GATpC,EAUJC,KAVI,CAUEC,GAAG,IAAG;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,GAV1B,CAAP;AAWH,CAbM;AAeP,OAAO,MAAOG,MAAM,GAAIf,IAAD,IAAS;AAE5B,SAAOC,KAAK,CAAE,GAAEH,GAAI,SAAR,EAAiB;AAEzBI,IAAAA,MAAM,EAAE,MAFiB;AAGzBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAHgB;AAOzBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAPmB,GAAjB,CAAL,CASJQ,IATI,CASCC,QAAQ,IAAG;AAAC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,GATpC,EAUJC,KAVI,CAUEC,GAAG,IAAG;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,GAV1B,CAAP;AAWH,CAbM;AAeP,OAAO,MAAMI,YAAY,GAAG,CAACC,IAAD,EAAMC,IAAN,KAAc;AACtC,MAAG,OAAOC,MAAP,KAAkB,WAArB,EAAiC;AAC7BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA2Bf,IAAI,CAACC,SAAL,CAAeU,IAAf,CAA3B;AACAC,IAAAA,IAAI;AACP;AACJ,CALM;AAOP,OAAO,MAAMI,OAAO,GAAIJ,IAAD,IAAS;AAC5B,MAAG,OAAOC,MAAP,KAAkB,WAArB,EAAiC;AAC7BC,IAAAA,YAAY,CAACG,UAAb,CAAwB,KAAxB;AACAL,IAAAA,IAAI;AAEJ,WAAOjB,KAAK,CAAE,GAAEH,GAAI,UAAR,EAAkB;AAC1BI,MAAAA,MAAM,EAAC;AADmB,KAAlB,CAAL,CAGNM,IAHM,CAGDC,QAAQ,IAAEI,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBL,QAAtB,CAHT,EAINE,KAJM,CAIAC,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJL,CAAP;AAKH;AAEJ,CAZM;AAcP,OAAO,MAAMY,eAAe,GAAG,MAAI;AAC/B,MAAG,OAAOL,MAAP,IAAgB,WAAnB,EAA+B;AAC3B,WAAO,KAAP;AACH;;AACD,MAAGC,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAH,EAA+B;AAC3B,WAAOnB,IAAI,CAACoB,KAAL,CAAWN,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAX,CAAP;AACH,GAFD,MAEK;AACD,WAAO,KAAP;AACH;AAEJ,CAVM","sourcesContent":["import {API} from '../config'\r\n\r\nexport const  signUp = (user) =>{\r\n\r\n    return fetch(`${API}/signup`,{\r\n\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n\r\n    }).then(response =>{return response.json()})\r\n      .catch(err =>{console.log(err)})  \r\n}\r\n\r\nexport const  signIn = (user) =>{\r\n\r\n    return fetch(`${API}/signin`,{\r\n\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n\r\n    }).then(response =>{return response.json()})\r\n      .catch(err =>{console.log(err)})  \r\n}\r\n\r\nexport const authenticate = (data,next) =>{\r\n    if(typeof window !== 'undefined'){\r\n        localStorage.setItem('jwt',JSON.stringify(data))\r\n        next()        \r\n    }\r\n}\r\n\r\nexport const signOut = (next) =>{\r\n    if(typeof window !== 'undefined'){\r\n        localStorage.removeItem('jwt')\r\n        next()\r\n        \r\n        return fetch(`${API}/signout`,{\r\n            method:'GET'\r\n        })\r\n        .then(response=>console.log('signout',response))\r\n        .catch(err=>console.log(err))\r\n    }\r\n\r\n}\r\n\r\nexport const isAuthenticated = ()=>{\r\n    if(typeof window =='undefined'){\r\n        return false\r\n    }\r\n    if(localStorage.getItem('jwt')){\r\n        return JSON.parse(localStorage.getItem('jwt'))\r\n    }else{\r\n        return false\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}