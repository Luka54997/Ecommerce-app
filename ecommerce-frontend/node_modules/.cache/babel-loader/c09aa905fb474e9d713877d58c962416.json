{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\mern-ecommerce\\\\react-nodejs-ecommerce-app\\\\ecommerce-frontend\\\\src\\\\admin\\\\AddCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth/auth';\nimport { createCategory } from './apiAdmin';\n\nconst AddCategory = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const {\n    user,\n    token\n  } = isAuthenticated();\n\n  const handleChange = e => {\n    setError('');\n    setName(e.target.value);\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    setError('');\n    setSuccess(false);\n    createCategory(user._id, token, {\n      name\n    }).then(data => {\n      if (data.error) {\n        setError(true);\n      } else {\n        setError('');\n        setSuccess(true);\n      }\n    });\n  };\n\n  const newCategoryForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: clickSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          onChange: handleChange,\n          value: name,\n          autoFocus: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-primary\",\n        children: \"Create Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  };\n\n  const showSuccess = () => {\n    if (success) {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-success\",\n        children: [name, \" is created\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this);\n    }\n  };\n\n  const showError = () => {\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-danger\",\n        children: \"Category should be unique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Dashboard\",\n    description: `Hello ${user.name}`,\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 offset-md-2\",\n        children: [showSuccess(), showError(), newCategoryForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddCategory, \"WzKUXoNFpxDIRPCKFZMBmW4cJZM=\");\n\n_c = AddCategory;\nexport default AddCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCategory\");","map":{"version":3,"sources":["C:/mern-ecommerce/react-nodejs-ecommerce-app/ecommerce-frontend/src/admin/AddCategory.js"],"names":["React","useState","Link","Layout","isAuthenticated","createCategory","AddCategory","name","setName","success","setSuccess","error","setError","user","token","handleChange","e","target","value","clickSubmit","preventDefault","_id","then","data","newCategoryForm","showSuccess","showError"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAAQC,eAAR,QAA8B,cAA9B;AACA,SAAQC,cAAR,QAA6B,YAA7B;;AAEA,MAAMC,WAAW,GAAG,MAAK;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACQ,OAAD,EAASC,UAAT,IAAuBT,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACU,KAAD,EAAOC,QAAP,IAAmBX,QAAQ,CAAC,KAAD,CAAjC;AAEA,QAAM;AAACY,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAeV,eAAe,EAApC;;AAEA,QAAMW,YAAY,GAAIC,CAAD,IAAM;AACvBJ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAJ,IAAAA,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAHD;;AAKA,QAAMC,WAAW,GAAIH,CAAD,IAAM;AACtBA,IAAAA,CAAC,CAACI,cAAF;AACAR,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,IAAAA,cAAc,CAACQ,IAAI,CAACQ,GAAN,EAAUP,KAAV,EAAgB;AAACP,MAAAA;AAAD,KAAhB,CAAd,CACCe,IADD,CACMC,IAAI,IAAE;AACR,UAAGA,IAAI,CAACZ,KAAR,EAAc;AACVC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAFD,MAGI;AACAA,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,KATD;AAWH,GAfD;;AAiBA,QAAMc,eAAe,GAAG,MAAK;AAEzB,wBACI;AAAM,MAAA,QAAQ,EAAEL,WAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,cAA7B;AAA4C,UAAA,QAAQ,EAAEJ,YAAtD;AAAoE,UAAA,KAAK,EAAER,IAA3E;AAAiF,UAAA,SAAS,MAA1F;AAA2F,UAAA,QAAQ;AAAnG;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAQ,QAAA,SAAS,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAZD;;AAcA,QAAMkB,WAAW,GAAG,MAAK;AACrB,QAAGhB,OAAH,EAAW;AACX,0BAAO;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,mBAA8BF,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACC;AACJ,GAJD;;AAKA,QAAMmB,SAAS,GAAG,MAAK;AACnB,QAAGf,KAAH,EAAS;AACT,0BAAO;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACC;AACJ,GAJD;;AAMA,sBACI,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,WAAW,EAAG,SAAQE,IAAI,CAACN,IAAK,EAA1D;AAA6D,IAAA,SAAS,EAAC,iBAAvE;AAAA,2BAGA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,mBACKkB,WAAW,EADhB,EAEKC,SAAS,EAFd,EAGKF,eAAe,EAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAzED;;GAAMlB,W;;KAAAA,W;AA2EN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Layout from '../core/Layout'\r\nimport {isAuthenticated} from '../auth/auth'\r\nimport {createCategory} from './apiAdmin'\r\n\r\nconst AddCategory = () =>{\r\n\r\n    const [name,setName] = useState('')\r\n    const [success,setSuccess] = useState(false)\r\n    const [error,setError] = useState(false)\r\n\r\n    const {user,token} = isAuthenticated()\r\n\r\n    const handleChange = (e) =>{\r\n        setError('')\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const clickSubmit = (e) =>{\r\n        e.preventDefault()\r\n        setError('')\r\n        setSuccess(false)\r\n        createCategory(user._id,token,{name})   \r\n        .then(data=>{\r\n            if(data.error){\r\n                setError(true)\r\n            }\r\n            else{\r\n                setError('')\r\n                setSuccess(true)\r\n            }\r\n        })  \r\n\r\n    }\r\n\r\n    const newCategoryForm = () =>{\r\n\r\n        return(\r\n            <form onSubmit={clickSubmit}>\r\n                <div className='form-group'>\r\n                    <label className='text-muted'>Name</label>\r\n                    <input type='text' className='form-control' onChange={handleChange} value={name} autoFocus required></input>\r\n                </div>\r\n                <button className='btn btn-outline-primary'>Create Category</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n\r\n    const showSuccess = () =>{\r\n        if(success){\r\n        return <h3 className='text-success'>{name} is created</h3>\r\n        }\r\n    }\r\n    const showError = () =>{\r\n        if(error){\r\n        return <h3 className='text-danger'>Category should be unique</h3>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout title=\"Dashboard\" description={`Hello ${user.name}`} className=\"container-fluid\">      \r\n\r\n\r\n        <div className=\"row\">\r\n            \r\n            <div className=\"col-md-8 offset-md-2\">\r\n                {showSuccess()}\r\n                {showError()}\r\n                {newCategoryForm()}  \r\n            </div>\r\n        </div>\r\n        \r\n            \r\n        \r\n         \r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default AddCategory"]},"metadata":{},"sourceType":"module"}